server {
    server_name ord-mainnet.sat20.org; # managed by Certbot
    # access_log logs/main.log combined;

    # root /var/www/html;
    # index index.nginx-debian.html;

    # status page for all the peers:
    location = /status {
        access_log on;
        # allow 127.0.0.1;
        # allow 103.103.245.177;
        # allow 146.56.96.109;
        # allow 183.47.45.170;
        # deny all;

        default_type text/plain;
        content_by_lua_block {
            local hc = require "resty.upstream.healthcheck"
            ngx.say("Nginx Worker PID: ", ngx.worker.pid())
            ngx.print(hc.status_page())
        }
    }

    # status page for all the peers (prometheus format):
    location = /metrics {
        access_log on;
        default_type text/plain;
        content_by_lua_block {
            local hc = require "resty.upstream.healthcheck"
            st , err = hc.prometheus_status_page()
            if not st then
                ngx.say(err)
                return
            end
            ngx.print(st)
        }
    }
    
    location ~ ^/(content/|preview/|r/blockhash/|r/blockinfo/|r/inscription/|r/metadata/)(.*)$ {
        proxy_cache ord_cache;
        proxy_cache_valid 200 1h;
        proxy_cache_valid 400 401 10m;
        proxy_cache_valid any 1m;
        proxy_pass http://prd_mainnet;
        rewrite ^/(content/|preview/|r/blockhash/|r/blockinfo/|r/inscription/|r/metadata/)(.*)$ /mainnet/ord/$1$2 break;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location ~ ^/(static/)(.*)$ {
        proxy_cache ord_cache;
        proxy_cache_valid 200 1h;
        proxy_cache_valid 400 401 5s;
        proxy_cache_valid any 1s;
        proxy_pass http://prd_mainnet;
        rewrite ^/(static/)(.*)$ /static/$2 break;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    listen [::]:443 ssl; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/sat20.org/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/sat20.org/privkey.pem; # managed by Certbot
    ssl_session_cache    shared:SSL:1m;
    ssl_session_timeout  5m;

    ssl_ciphers  HIGH:!aNULL:!MD5;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
    ssl_prefer_server_ciphers  on;
}
