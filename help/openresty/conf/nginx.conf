
#user  nobody;
worker_processes  2;
worker_rlimit_nofile 400000;

error_log  logs/error.log;
error_log  logs/error.log  notice;
error_log  logs/error.log  info;

pid        logs/nginx.pid;


events {
    worker_connections  65535;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format cache_log '$remote_addr - $remote_user [$time_local] "$request" '
                         '$status $body_bytes_sent "$http_referer" '
                         '"$http_user_agent" "$http_x_forwarded_for"'
                         'cache_status=$upstream_cache_status';
    
    # resolver 8.8.8.8 8.8.4.4 valid=300s;
    # resolver_timeout 5s;
    
    # log_format cache_log '$remote_addr - $remote_user [$time_local] "$request" '
    #                      '$status $body_bytes_sent "$http_referer" '
    #                      '"$http_user_agent" "$http_x_forwarded_for" '
    #                      'cache_status=$upstream_cache_status '
    #                      '"$host$request_uri" "$upstream_addr" "$upstream_status" '
    #                      '"$request_time" "$upstream_response_time"';

    access_log logs/access.log cache_log;
    #access_log logs/access.log main;

    #sendfile       on;
    #tcp_nopush     on;
    #tcp_nodelay on;
    #keepalive_timeout  65;
    #types_hash_max_size 2048;
    #server_tokens off;
    keepalive_timeout  10;
    gzip  on;

    upstream prd_mainnet {
        server 127.0.0.1:8001;
        # server 127.0.0.1:8011;
        # server 127.0.0.1:8003;
        server 127.0.0.1:8011 backup;
        server 127.0.0.1:8003 backup;
    }

    upstream prd_testnet4 {
        #ip_hash;
        server 127.0.0.1:8007;
        server 127.0.0.1:8017 backup;
        server 127.0.0.1:8008 backup;
    }

    lua_package_path "/usr/local/openresty/lualib/resty/?.lua;/usr/local/openresty/lualib/resty/upstream/?.lua;;";
    # lua_code_cache off;
    proxy_cache_path /var/cache/openresty levels=1:2 keys_zone=ord_cache:500m max_size=5g inactive=30d;
    # proxy_cache_path /var/cache/openresty levels=1:2 keys_zone=ord_cache:500m max_size=5g inactive=60m;
    lua_shared_dict healthcheck 1m;
    lua_socket_log_errors on;
    init_worker_by_lua_block {
        local hc = require "resty.upstream.healthcheck"
        # prd
        local ok, err = hc.spawn_checker {
            shm = "healthcheck",
            upstream = "prd_mainnet",
            type = "http",
            http_req = "GET /mainnet/health HTTP/1.0\r\nHost: apiprd.ordx.space\mainnet\r\n\r\n",
            interval = 3000,
            timeout = 1000,
            fall = 3,
            rise = 2,
            valid_statuses = {
                200,
                302
            },
            concurrency = 10,
            -- ssl_verify = false,
        }
        if not ok then
            ngx.log(ngx.ERR,"=======> failed to spawn health checker(apiprd.ordx.space\mainnet): ", err)
        #    return
        end

        ok, err = hc.spawn_checker {
            shm = "healthcheck",
            upstream = "prd_testnet4",
            type = "http",
            http_req = "GET /testnet4/health HTTP/1.0\r\nHost: apiprd.ordx.space\testnet4\r\n\r\n",
            interval = 3000,
            timeout = 1000,
            fall = 3,
            rise = 2,
            valid_statuses = {
                200,
                302
            },
            concurrency = 10,
            -- ssl_verify = false,
        }
        if not ok then
            ngx.log(ngx.ERR,"=======> failed to spawn health checker(apiprd.ordx.space\testnet4): ", err)
        #    return
        #end
    }

    include /etc/openresty/sites-enabled/*;
}
